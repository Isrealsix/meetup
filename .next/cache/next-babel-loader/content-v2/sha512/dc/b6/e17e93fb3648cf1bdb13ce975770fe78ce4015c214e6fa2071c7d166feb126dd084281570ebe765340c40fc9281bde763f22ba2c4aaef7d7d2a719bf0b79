{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/isrealsix/PROG/NextJS/Meetup/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Add a New Meetup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Add your own meetup and get linking up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/isrealsix/PROG/NextJS/Meetup/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,sBACQ,QAAC,QAAD;AAAA,4BACA,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKA,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAAtC;AAA6C,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAArE;AAA4E,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAAtG;AAA+G,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAA7I;AAAA;AAAA;AAAA;AAAA,YALA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AASH;;KAVQN,a;;AA8ET,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\n\n\nfunction MeetupDetails(props) {\n    return (\n            <Fragment>\n            <Head>\n                <title>Add a New Meetup</title>\n                <meta name='description' content='Add your own meetup and get linking up' />\n            </Head>\n            <MeetupDetail image={props.meetupData.image} title={props.meetupData.title} address={props.meetupData.address} description={props.meetupData.description}/>\n            </Fragment>\n    )\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect('mongodb+srv://pegasus:pegasusDB@cluster0.szf3b.mongodb.net/meetupsdb?retryWrites=true&w=majority')\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n    client.close();\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({\n            params: {\n                meetupId: meetup._id.toString()\n            }\n        }))\n        \n        // [\n        //     {\n        //         params: {\n        //             meetupId: 'm1'\n        //         }\n        //     },\n\n        //     {\n        //         params: {\n        //             meetupId: 'm2'\n        //         }\n        //     }\n        // ]\n    }\n}\n\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId\n    // fetch data for a single meetup\n    const client = await MongoClient.connect('mongodb+srv://pegasus:pegasusDB@cluster0.szf3b.mongodb.net/meetupsdb?retryWrites=true&w=majority')\n\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({\n        _id: ObjectId(meetupId)\n    });\n\n    client.close();\n\n\n\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                image: selectedMeetup.image,\n                address: selectedMeetup.address,\n                description: selectedMeetup.description\n            }\n        }\n    }\n}\n\n\nexport default MeetupDetails\n"]},"metadata":{},"sourceType":"module"}